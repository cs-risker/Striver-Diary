class Solution {
public:
    string simplifyPath(string path) {
        stack<string> st;
        int m = path.size();
        for(int i = 0; i < m; ++i) {
            char cur = path[i];
            if(cur == '/') {
                continue;
            } else if(cur == '.'){
                if((i + 1 < m && path[i + 1]=='/') || i + 1 == m){
                    i = i + 1;
                    continue;
                } else if( i + 1 < m && path[i + 1] == '.' &&  ( i + 2 >= m || (i + 2 < m && path[i + 2] == '/'))) {
                    if(st.empty()){
                        continue;
                    }
                    st.pop();
                    i = i + 2;
                } else {
                    string temp;
                    while(i < m && path[i] != '/') {
                        temp += path[i];
                        ++i;
                    }
                    st.push(temp);
                }
            } else {
                string temp;
                while(i < m && path[i] != '/') {
                    temp += path[i];
                    ++i;
                }
                st.push(temp);
            }
        }
        string res;
        if(st.empty()){
            res += '/';
        }
        while(!st.empty()){
            res = st.top() + res;
            res = '/' + res;
            st.pop();
        }
        return res;
    }
};
